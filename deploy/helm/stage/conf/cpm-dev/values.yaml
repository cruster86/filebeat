---
daemonset:
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 50m
      memory: 50Mi

## Replicas being used for the filebeat deployment
#replicas: 1
#
#extraContainers: ""
## - name: dummy-init
##   image: busybox
##   command: ['echo', 'hey']
#
#extraInitContainers: []
## - name: dummy-init
#
## Root directory where Filebeat will write data to in order to persist registry data across pod restarts (file position #and other metadata).
#hostPathRoot: /var/lib
#
#dnsConfig: {}
## options:
##   - name: ndots
##     value: "2"
#hostAliases: []
##- ip: "127.0.0.1"
##  hostnames:
##  - "foo.local"
##  - "bar.local"
#
##image: "cr.yandex/crpcm9tg75s8gu2hqkp9/filebeat"
#image: "registry.sirius.online/infra/filebeat"
#imageTag: "7.17.3"
#imagePullPolicy: "IfNotPresent"
#
#imagePullSecrets:
#- name: sirius-registry
#- name: gitlab-registry
#
#livenessProbe:
#  exec:
#    command:
#      - sh
#      - -c
#      - |
#        #!/usr/bin/env bash -e
#        curl --fail 127.0.0.1:5066
#  failureThreshold: 3
#  initialDelaySeconds: 10
#  periodSeconds: 10
#  timeoutSeconds: 5
#
#readinessProbe:
#  exec:
#    command:
#      - sh
#      - -c
#      - |
#        #!/usr/bin/env bash -e
#        filebeat test output
#  failureThreshold: 3
#  initialDelaySeconds: 10
#  periodSeconds: 10
#  timeoutSeconds: 5
#
## Whether this chart should self-manage its service account, role, and associated role binding.
#managedServiceAccount: true
#
#clusterRoleRules:
#  - apiGroups:
#      - ""
#    resources:
#      - namespaces
#      - nodes
#      - pods
#    verbs:
#      - get
#      - list
#      - watch
#  - apiGroups:
#      - "apps"
#    resources:
#      - replicasets
#    verbs:
#      - get
#      - list
#      - watch
#  - apiGroups:
#      - extensions
#    resourceNames:
#      - filebeat-psp
#    resources:
#      - podsecuritypolicies
#    verbs:
#      - use
#
#podAnnotations:
#  {}
#  # iam.amazonaws.com/role: es-cluster
#
## Custom service account override that the pod will use
#serviceAccount: ""
#
## Annotations to add to the ServiceAccount that is created if the serviceAccount value isn't set.
#serviceAccountAnnotations:
#  {}
#  # eks.amazonaws.com/role-arn: arn:aws:iam::111111111111:role/k8s.clustername.namespace.serviceaccount
#
## How long to wait for Filebeat pods to stop gracefully
#terminationGracePeriod: 30
## This is the PriorityClass settings as defined in
## https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
#priorityClassName: ""
#
#updateStrategy: RollingUpdate
#
## Override various naming aspects of this chart
## Only edit these if you know what you're doing
#nameOverride: ""
#fullnameOverride: ""

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: node-role
          operator: In
          values:
          - ejudge
          - postgres-failover
          - stage

tolerations:
- effect: NoSchedule
  key: node-role
  operator: Equal
  value: stage
- effect: NoSchedule
  key: node-role
  operator: Equal
  value: postgres-failover

#envFrom: []
#
#extraEnvs: []
#
#extraVolumes: []
#
#extraVolumeMounts: []
#
## Add config file filebeat.yml for daemonset in /usr/share/filebeat
#filebeatConfig: {}
#
#labels: {}
#
#nodeSelector: {}
#
#podSecurityContext: {}
#
#resources: {}
#
#secretMounts: []

